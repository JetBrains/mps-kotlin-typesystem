package jetbrains.mps.kotlin.test.hierarchy;

/*Generated by MPS */

import jetbrains.mps.logic.dataform.DataForm;
import jetbrains.mps.kotlin.api.types.identifiers.TypeKey;
import org.jetbrains.annotations.NotNull;
import java.util.Collection;
import jetbrains.mps.unification.Term;

/**
 * DataForm impl for testing purpose
 */
/*package*/ final class TestDataForm implements DataForm {
  private final TypeKey myTypeKey;
  public TestDataForm(TypeKey typeKey) {
    myTypeKey = typeKey;
  }
  @NotNull
  @Override
  public Object symbol() {
    return myTypeKey;
  }
  @Override
  public String toString() {
    return myTypeKey.toString();
  }




  @Override
  public DataForm copyRecursively() {
    return null;
  }
  @Override
  public DataForm mapRecursively(DataForm.Mapper mapper) {
    return null;
  }
  @Override
  public Object acceptVisitor(DataForm.Visitor visitor) {
    return null;
  }
  @Override
  public int variablesCount() {
    return 0;
  }
  @Override
  public Collection<? extends Term> arguments() {
    return null;
  }
  @Override
  public Term get() {
    return null;
  }
  @Override
  public boolean is(Term.Kind kind) {
    return false;
  }
  @Override
  public int compareTo(Term term) {
    return 0;
  }
}
