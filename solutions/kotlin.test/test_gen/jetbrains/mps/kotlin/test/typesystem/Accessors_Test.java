package jetbrains.mps.kotlin.test.typesystem;

/*Generated by MPS */

import jetbrains.mps.MPSLaunch;
import jetbrains.mps.lang.test.runtime.BaseTransformationTest;
import org.junit.jupiter.api.extension.RegisterExtension;
import jetbrains.mps.lang.test.runtime.TestParametersCacheExtension;
import jetbrains.mps.lang.test.runtime.TestParametersCache;
import org.junit.jupiter.api.Test;
import jetbrains.mps.lang.test.runtime.BaseTestBody;
import jetbrains.mps.lang.test.runtime.TransformationTest;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.test.runtime.CheckExpectedMessageRunnable;
import jetbrains.mps.errors.MessageStatus;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.lang.test.runtime.CheckErrorMessagesRunnable;
import java.util.Arrays;

@MPSLaunch
public class Accessors_Test extends BaseTransformationTest {
  @RegisterExtension
  private static final TestParametersCacheExtension ourParametersCacheExtension = new TestParametersCacheExtension(new TestParametersCache(Accessors_Test.class, "${kotlin_home}", "r:075f8e94-5ac7-48fe-90f0-460c8035f853(jetbrains.mps.kotlin.test.typesystem@tests)", false));

  public Accessors_Test() {
    super(ourParametersCacheExtension.getParametersCache());
  }

  @Test
  public void test_NodeUnknownRuleCheck2138970093538978150() throws Throwable {
    new TestBody(this).test_NodeUnknownRuleCheck2138970093538978150();
  }
  @Test
  public void test_NodelocalPropertyDeclarationCheck6932790078330408593() throws Throwable {
    new TestBody(this).test_NodelocalPropertyDeclarationCheck6932790078330408593();
  }
  @Test
  public void test_NodeassignmentCheck6932790078330386319() throws Throwable {
    new TestBody(this).test_NodeassignmentCheck6932790078330386319();
  }
  @Test
  public void test_NodelocalPropertyDeclarationCheck6932790078330365360() throws Throwable {
    new TestBody(this).test_NodelocalPropertyDeclarationCheck6932790078330365360();
  }
  @Test
  public void test_ErrorMessagesCheck2138970093539033698() throws Throwable {
    new TestBody(this).test_ErrorMessagesCheck2138970093539033698();
  }

  /*package*/ static class TestBody extends BaseTestBody {

    /*package*/ TestBody(TransformationTest owner) {
      super(owner);
    }

    @Override
    protected void initTestNodes() {
      prepareTestNodes("2138970093538951132");
    }

    public void test_NodeUnknownRuleCheck2138970093538978150() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("2465168547708057118");
        new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:133e8cac-c6ad-447f-a90c-5146ca3b1aed(jetbrains.mps.kotlin.constraints)", "6737238604821165126"), "", myProject.getRepository(), myProject.getPlatform()).run();
      });
    }
    public void test_NodelocalPropertyDeclarationCheck6932790078330408593() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("2465168547708051598");
        new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:1007e072-ac19-4b13-85dc-0e4118398cf2(jetbrains.mps.kotlinExt.types)", "7221070484968220588"), "", myProject.getRepository(), myProject.getPlatform()).run();
      });
    }
    public void test_NodeassignmentCheck6932790078330386319() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("2465168547708063815");
        new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:1007e072-ac19-4b13-85dc-0e4118398cf2(jetbrains.mps.kotlinExt.types)", "7221070484968115068"), "", myProject.getRepository(), myProject.getPlatform()).run();
      });
    }
    public void test_NodelocalPropertyDeclarationCheck6932790078330365360() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("2465168547708062594");
        new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:1007e072-ac19-4b13-85dc-0e4118398cf2(jetbrains.mps.kotlinExt.types)", "7221070484968220588"), "", myProject.getRepository(), myProject.getPlatform()).run();
      });
    }
    public void test_ErrorMessagesCheck2138970093539033698() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("2465168547708044734");
        new CheckErrorMessagesRunnable(nodeToCheck, false, false, myProject.getPlatform()).includeSelf(true).exclude(Arrays.<CheckExpectedMessageRunnable>asList(new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(getNodeById("2465168547708057118"), MessageStatus.ERROR, new SNodePointer("r:133e8cac-c6ad-447f-a90c-5146ca3b1aed(jetbrains.mps.kotlin.constraints)", "6737238604821165126"), "", myProject.getRepository(), myProject.getPlatform()), new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(getNodeById("2465168547708051598"), MessageStatus.ERROR, new SNodePointer("r:1007e072-ac19-4b13-85dc-0e4118398cf2(jetbrains.mps.kotlinExt.types)", "7221070484968220588"), "", myProject.getRepository(), myProject.getPlatform()), new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(getNodeById("2465168547708063815"), MessageStatus.ERROR, new SNodePointer("r:1007e072-ac19-4b13-85dc-0e4118398cf2(jetbrains.mps.kotlinExt.types)", "7221070484968115068"), "", myProject.getRepository(), myProject.getPlatform()), new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(getNodeById("2465168547708062594"), MessageStatus.ERROR, new SNodePointer("r:1007e072-ac19-4b13-85dc-0e4118398cf2(jetbrains.mps.kotlinExt.types)", "7221070484968220588"), "", myProject.getRepository(), myProject.getPlatform()))).run();
      });
    }

  }
}
