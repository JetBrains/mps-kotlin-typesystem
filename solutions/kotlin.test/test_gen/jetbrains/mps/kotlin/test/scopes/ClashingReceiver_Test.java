package jetbrains.mps.kotlin.test.scopes;

/*Generated by MPS */

import jetbrains.mps.MPSLaunch;
import jetbrains.mps.lang.test.runtime.BaseTransformationTest;
import org.junit.jupiter.api.extension.RegisterExtension;
import jetbrains.mps.lang.test.runtime.TestParametersCacheExtension;
import jetbrains.mps.lang.test.runtime.TestParametersCache;
import org.junit.jupiter.api.Test;
import jetbrains.mps.lang.test.runtime.BaseTestBody;
import jetbrains.mps.lang.test.runtime.TransformationTest;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.test.runtime.CheckExpectedMessageRunnable;
import jetbrains.mps.errors.MessageStatus;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.lang.test.runtime.CheckErrorMessagesRunnable;
import java.util.Arrays;

@MPSLaunch
public class ClashingReceiver_Test extends BaseTransformationTest {
  @RegisterExtension
  private static final TestParametersCacheExtension ourParametersCacheExtension = new TestParametersCacheExtension(new TestParametersCache(ClashingReceiver_Test.class, "${kotlin_home}", "r:5496351e-6e92-4051-85ca-98be7df49c2e(jetbrains.mps.kotlin.test.scopes@tests)", false));

  public ClashingReceiver_Test() {
    super(ourParametersCacheExtension.getParametersCache());
  }

  @Test
  public void test_NodefunctionCallExpressionCheck2138970093539120129() throws Throwable {
    new TestBody(this).test_NodefunctionCallExpressionCheck2138970093539120129();
  }
  @Test
  public void test_NodefunctionCallExpressionCheck2138970093539132649() throws Throwable {
    new TestBody(this).test_NodefunctionCallExpressionCheck2138970093539132649();
  }
  @Test
  public void test_NodefunctionCallExpressionCheck2138970093539155431() throws Throwable {
    new TestBody(this).test_NodefunctionCallExpressionCheck2138970093539155431();
  }
  @Test
  public void test_NodefunctionCallExpressionCheck2138970093539169459() throws Throwable {
    new TestBody(this).test_NodefunctionCallExpressionCheck2138970093539169459();
  }
  @Test
  public void test_NodeErrorCheck2138970093539177675() throws Throwable {
    new TestBody(this).test_NodeErrorCheck2138970093539177675();
  }
  @Test
  public void test_NodeWrongOverloadTargetCheck2138970093539263900() throws Throwable {
    new TestBody(this).test_NodeWrongOverloadTargetCheck2138970093539263900();
  }
  @Test
  public void test_NodefunctionCallExpressionCheck2138970093539297001() throws Throwable {
    new TestBody(this).test_NodefunctionCallExpressionCheck2138970093539297001();
  }
  @Test
  public void test_ErrorMessagesCheck2138970093539102493() throws Throwable {
    new TestBody(this).test_ErrorMessagesCheck2138970093539102493();
  }

  /*package*/ static class TestBody extends BaseTestBody {

    /*package*/ TestBody(TransformationTest owner) {
      super(owner);
    }

    @Override
    protected void initTestNodes() {
      prepareTestNodes("2138970093539093664");
    }

    public void test_NodefunctionCallExpressionCheck2138970093539120129() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("8468471291970447362");
        new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:1007e072-ac19-4b13-85dc-0e4118398cf2(jetbrains.mps.kotlinExt.types)", "6832737637655996497"), "", myProject.getRepository(), myProject.getPlatform()).run();
      });
    }
    public void test_NodefunctionCallExpressionCheck2138970093539132649() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("8468471291970452053");
        new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:1007e072-ac19-4b13-85dc-0e4118398cf2(jetbrains.mps.kotlinExt.types)", "6832737637655996497"), "", myProject.getRepository(), myProject.getPlatform()).run();
      });
    }
    public void test_NodefunctionCallExpressionCheck2138970093539155431() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("8468471291970484677");
        new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:1007e072-ac19-4b13-85dc-0e4118398cf2(jetbrains.mps.kotlinExt.types)", "6832737637655996497"), "", myProject.getRepository(), myProject.getPlatform()).run();
      });
    }
    public void test_NodefunctionCallExpressionCheck2138970093539169459() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("8468471291970485352");
        new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:1007e072-ac19-4b13-85dc-0e4118398cf2(jetbrains.mps.kotlinExt.types)", "6832737637655996497"), "", myProject.getRepository(), myProject.getPlatform()).run();
      });
    }
    public void test_NodeErrorCheck2138970093539177675() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("8468471291970456211");
        new CheckExpectedMessageRunnable.CheckAnyMessageRunnable(nodeToCheck, MessageStatus.ERROR, "", myProject.getRepository(), myProject.getPlatform()).run();
      });
    }
    public void test_NodeWrongOverloadTargetCheck2138970093539263900() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("8468471291970469286");
        new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:aff09eac-afd3-4057-bdd8-e02a572d1436(jetbrains.mps.kotlin.typesystem)", "219803515060660834"), "", myProject.getRepository(), myProject.getPlatform()).run();
      });
    }
    public void test_NodefunctionCallExpressionCheck2138970093539297001() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("8468471291970516274");
        new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:1007e072-ac19-4b13-85dc-0e4118398cf2(jetbrains.mps.kotlinExt.types)", "6832737637655996497"), "", myProject.getRepository(), myProject.getPlatform()).run();
      });
    }
    public void test_ErrorMessagesCheck2138970093539102493() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("8468471291970412115");
        new CheckErrorMessagesRunnable(nodeToCheck, false, false, myProject.getPlatform()).includeSelf(true).exclude(Arrays.<CheckExpectedMessageRunnable>asList(new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(getNodeById("8468471291970447362"), MessageStatus.ERROR, new SNodePointer("r:1007e072-ac19-4b13-85dc-0e4118398cf2(jetbrains.mps.kotlinExt.types)", "6832737637655996497"), "", myProject.getRepository(), myProject.getPlatform()), new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(getNodeById("8468471291970452053"), MessageStatus.ERROR, new SNodePointer("r:1007e072-ac19-4b13-85dc-0e4118398cf2(jetbrains.mps.kotlinExt.types)", "6832737637655996497"), "", myProject.getRepository(), myProject.getPlatform()), new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(getNodeById("8468471291970484677"), MessageStatus.ERROR, new SNodePointer("r:1007e072-ac19-4b13-85dc-0e4118398cf2(jetbrains.mps.kotlinExt.types)", "6832737637655996497"), "", myProject.getRepository(), myProject.getPlatform()), new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(getNodeById("8468471291970485352"), MessageStatus.ERROR, new SNodePointer("r:1007e072-ac19-4b13-85dc-0e4118398cf2(jetbrains.mps.kotlinExt.types)", "6832737637655996497"), "", myProject.getRepository(), myProject.getPlatform()), new CheckExpectedMessageRunnable.CheckAnyMessageRunnable(getNodeById("8468471291970456211"), MessageStatus.ERROR, "", myProject.getRepository(), myProject.getPlatform()), new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(getNodeById("8468471291970469286"), MessageStatus.ERROR, new SNodePointer("r:aff09eac-afd3-4057-bdd8-e02a572d1436(jetbrains.mps.kotlin.typesystem)", "219803515060660834"), "", myProject.getRepository(), myProject.getPlatform()), new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(getNodeById("8468471291970516274"), MessageStatus.ERROR, new SNodePointer("r:1007e072-ac19-4b13-85dc-0e4118398cf2(jetbrains.mps.kotlinExt.types)", "6832737637655996497"), "", myProject.getRepository(), myProject.getPlatform()))).run();
      });
    }

  }
}
