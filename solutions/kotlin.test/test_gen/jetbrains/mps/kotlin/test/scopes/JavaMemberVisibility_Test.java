package jetbrains.mps.kotlin.test.scopes;

/*Generated by MPS */

import jetbrains.mps.MPSLaunch;
import jetbrains.mps.lang.test.runtime.BaseTransformationTest;
import org.junit.jupiter.api.extension.RegisterExtension;
import jetbrains.mps.lang.test.runtime.TestParametersCacheExtension;
import jetbrains.mps.lang.test.runtime.TestParametersCache;
import org.junit.jupiter.api.Test;
import jetbrains.mps.lang.test.runtime.BaseTestBody;
import jetbrains.mps.lang.test.runtime.TransformationTest;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.test.runtime.CheckExpectedMessageRunnable;
import jetbrains.mps.errors.MessageStatus;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.lang.test.runtime.CheckErrorMessagesRunnable;
import java.util.Arrays;

@MPSLaunch
public class JavaMemberVisibility_Test extends BaseTransformationTest {
  @RegisterExtension
  private static final TestParametersCacheExtension ourParametersCacheExtension = new TestParametersCacheExtension(new TestParametersCache(JavaMemberVisibility_Test.class, "${kotlin_home}", "r:5496351e-6e92-4051-85ca-98be7df49c2e(jetbrains.mps.kotlin.test.scopes@tests)", false));

  public JavaMemberVisibility_Test() {
    super(ourParametersCacheExtension.getParametersCache());
  }

  @Test
  public void test_NodeUnknownRuleCheck1945927285049964326() throws Throwable {
    new TestBody(this).test_NodeUnknownRuleCheck1945927285049964326();
  }
  @Test
  public void test_NodeErrorCheck1945927285049879481() throws Throwable {
    new TestBody(this).test_NodeErrorCheck1945927285049879481();
  }
  @Test
  public void test_NodeUnknownRuleCheck1945927285049967535() throws Throwable {
    new TestBody(this).test_NodeUnknownRuleCheck1945927285049967535();
  }
  @Test
  public void test_NodeErrorCheck1945927285049882441() throws Throwable {
    new TestBody(this).test_NodeErrorCheck1945927285049882441();
  }
  @Test
  public void test_NodeUnknownRuleCheck1945927285049955285() throws Throwable {
    new TestBody(this).test_NodeUnknownRuleCheck1945927285049955285();
  }
  @Test
  public void test_NodeUnknownRuleCheck1945927285049945955() throws Throwable {
    new TestBody(this).test_NodeUnknownRuleCheck1945927285049945955();
  }
  @Test
  public void test_NodefunctionCallExpressionCheck1945927285049750930() throws Throwable {
    new TestBody(this).test_NodefunctionCallExpressionCheck1945927285049750930();
  }
  @Test
  public void test_NodefunctionCallExpressionCheck1945927285049802415() throws Throwable {
    new TestBody(this).test_NodefunctionCallExpressionCheck1945927285049802415();
  }
  @Test
  public void test_NodeUnknownRuleCheck1945927285049817100() throws Throwable {
    new TestBody(this).test_NodeUnknownRuleCheck1945927285049817100();
  }
  @Test
  public void test_NodeUnknownRuleCheck1945927285049504811() throws Throwable {
    new TestBody(this).test_NodeUnknownRuleCheck1945927285049504811();
  }
  @Test
  public void test_NodeUnknownRuleCheck1945927285049511726() throws Throwable {
    new TestBody(this).test_NodeUnknownRuleCheck1945927285049511726();
  }
  @Test
  public void test_NodeUnknownRuleCheck1945927285049520099() throws Throwable {
    new TestBody(this).test_NodeUnknownRuleCheck1945927285049520099();
  }
  @Test
  public void test_NodeUnknownRuleCheck1945927285049527044() throws Throwable {
    new TestBody(this).test_NodeUnknownRuleCheck1945927285049527044();
  }
  @Test
  public void test_NodeErrorCheck1945927285049530059() throws Throwable {
    new TestBody(this).test_NodeErrorCheck1945927285049530059();
  }
  @Test
  public void test_NodeUnknownRuleCheck1945927285049541432() throws Throwable {
    new TestBody(this).test_NodeUnknownRuleCheck1945927285049541432();
  }
  @Test
  public void test_NodeErrorCheck1945927285049545863() throws Throwable {
    new TestBody(this).test_NodeErrorCheck1945927285049545863();
  }
  @Test
  public void test_NodeUnknownRuleCheck1945927285049554220() throws Throwable {
    new TestBody(this).test_NodeUnknownRuleCheck1945927285049554220();
  }
  @Test
  public void test_ErrorMessagesCheck1945927285049377936() throws Throwable {
    new TestBody(this).test_ErrorMessagesCheck1945927285049377936();
  }
  @Test
  public void test_ErrorMessagesCheck1945927285049372096() throws Throwable {
    new TestBody(this).test_ErrorMessagesCheck1945927285049372096();
  }

  /*package*/ static class TestBody extends BaseTestBody {

    /*package*/ TestBody(TransformationTest owner) {
      super(owner);
    }

    @Override
    protected void initTestNodes() {
      prepareTestNodes("1945927285049871904", "1945927285049598119", "1945927285049321037", "1945927285049349312", "1945927285049318809", "1945927285049360572");
    }

    public void test_NodeUnknownRuleCheck1945927285049964326() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("3400299585404646599");
        new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:a8be947e-2401-458d-a5e8-7789d9a23eaf(jetbrains.mps.kotlin.javaRefs.constraints)", "5016903245542434648"), "", myProject.getRepository(), myProject.getPlatform()).run();
      });
    }
    public void test_NodeErrorCheck1945927285049879481() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("3400299585404646598");
        new CheckExpectedMessageRunnable.CheckAnyMessageRunnable(nodeToCheck, MessageStatus.ERROR, "", myProject.getRepository(), myProject.getPlatform()).run();
      });
    }
    public void test_NodeUnknownRuleCheck1945927285049967535() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("3400299585404646614");
        new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:a8be947e-2401-458d-a5e8-7789d9a23eaf(jetbrains.mps.kotlin.javaRefs.constraints)", "8257079261608484900"), "", myProject.getRepository(), myProject.getPlatform()).run();
      });
    }
    public void test_NodeErrorCheck1945927285049882441() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("3400299585404646613");
        new CheckExpectedMessageRunnable.CheckAnyMessageRunnable(nodeToCheck, MessageStatus.ERROR, "", myProject.getRepository(), myProject.getPlatform()).run();
      });
    }
    public void test_NodeUnknownRuleCheck1945927285049955285() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("3400299585404646632");
        new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:a8be947e-2401-458d-a5e8-7789d9a23eaf(jetbrains.mps.kotlin.javaRefs.constraints)", "5016903245542434648"), "", myProject.getRepository(), myProject.getPlatform()).run();
      });
    }
    public void test_NodeUnknownRuleCheck1945927285049945955() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("3400299585404646651");
        new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:a8be947e-2401-458d-a5e8-7789d9a23eaf(jetbrains.mps.kotlin.javaRefs.constraints)", "8257079261608484900"), "", myProject.getRepository(), myProject.getPlatform()).run();
      });
    }
    public void test_NodefunctionCallExpressionCheck1945927285049750930() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("1945927285049708368");
        new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:1007e072-ac19-4b13-85dc-0e4118398cf2(jetbrains.mps.kotlinExt.types)", "6832737637655996497"), "", myProject.getRepository(), myProject.getPlatform()).run();
      });
    }
    public void test_NodefunctionCallExpressionCheck1945927285049802415() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("3707072488410314739");
        new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:1007e072-ac19-4b13-85dc-0e4118398cf2(jetbrains.mps.kotlinExt.types)", "6832737637655996497"), "", myProject.getRepository(), myProject.getPlatform()).run();
      });
    }
    public void test_NodeUnknownRuleCheck1945927285049817100() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("3707072488410431526");
        new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:1007e072-ac19-4b13-85dc-0e4118398cf2(jetbrains.mps.kotlinExt.types)", "1389314048065590743"), "", myProject.getRepository(), myProject.getPlatform()).run();
      });
    }
    public void test_NodeUnknownRuleCheck1945927285049504811() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("3400299585400304853");
        new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:a8be947e-2401-458d-a5e8-7789d9a23eaf(jetbrains.mps.kotlin.javaRefs.constraints)", "5016903245542434648"), "", myProject.getRepository(), myProject.getPlatform()).run();
      });
    }
    public void test_NodeUnknownRuleCheck1945927285049511726() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("3400299585400438069");
        new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:a8be947e-2401-458d-a5e8-7789d9a23eaf(jetbrains.mps.kotlin.javaRefs.constraints)", "5016903245542434648"), "", myProject.getRepository(), myProject.getPlatform()).run();
      });
    }
    public void test_NodeUnknownRuleCheck1945927285049520099() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("3400299585400765541");
        new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:a8be947e-2401-458d-a5e8-7789d9a23eaf(jetbrains.mps.kotlin.javaRefs.constraints)", "8257079261608484900"), "", myProject.getRepository(), myProject.getPlatform()).run();
      });
    }
    public void test_NodeUnknownRuleCheck1945927285049527044() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("3400299585400775113");
        new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:a8be947e-2401-458d-a5e8-7789d9a23eaf(jetbrains.mps.kotlin.javaRefs.constraints)", "8257079261608484900"), "", myProject.getRepository(), myProject.getPlatform()).run();
      });
    }
    public void test_NodeErrorCheck1945927285049530059() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("3400299585400961992");
        new CheckExpectedMessageRunnable.CheckAnyMessageRunnable(nodeToCheck, MessageStatus.ERROR, "", myProject.getRepository(), myProject.getPlatform()).run();
      });
    }
    public void test_NodeUnknownRuleCheck1945927285049541432() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("3400299585400962160");
        new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:a8be947e-2401-458d-a5e8-7789d9a23eaf(jetbrains.mps.kotlin.javaRefs.constraints)", "5016903245542434648"), "", myProject.getRepository(), myProject.getPlatform()).run();
      });
    }
    public void test_NodeErrorCheck1945927285049545863() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("3400299585400977152");
        new CheckExpectedMessageRunnable.CheckAnyMessageRunnable(nodeToCheck, MessageStatus.ERROR, "", myProject.getRepository(), myProject.getPlatform()).run();
      });
    }
    public void test_NodeUnknownRuleCheck1945927285049554220() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("3400299585400977355");
        new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:a8be947e-2401-458d-a5e8-7789d9a23eaf(jetbrains.mps.kotlin.javaRefs.constraints)", "8257079261608484900"), "", myProject.getRepository(), myProject.getPlatform()).run();
      });
    }
    public void test_ErrorMessagesCheck1945927285049377936() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("3400299585400089770");
        new CheckErrorMessagesRunnable(nodeToCheck, false, false, myProject.getPlatform()).includeSelf(true).exclude(Arrays.<CheckExpectedMessageRunnable>asList(new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(getNodeById("3400299585400304853"), MessageStatus.ERROR, new SNodePointer("r:a8be947e-2401-458d-a5e8-7789d9a23eaf(jetbrains.mps.kotlin.javaRefs.constraints)", "5016903245542434648"), "", myProject.getRepository(), myProject.getPlatform()), new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(getNodeById("3400299585400438069"), MessageStatus.ERROR, new SNodePointer("r:a8be947e-2401-458d-a5e8-7789d9a23eaf(jetbrains.mps.kotlin.javaRefs.constraints)", "5016903245542434648"), "", myProject.getRepository(), myProject.getPlatform()), new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(getNodeById("3400299585400765541"), MessageStatus.ERROR, new SNodePointer("r:a8be947e-2401-458d-a5e8-7789d9a23eaf(jetbrains.mps.kotlin.javaRefs.constraints)", "8257079261608484900"), "", myProject.getRepository(), myProject.getPlatform()), new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(getNodeById("3400299585400775113"), MessageStatus.ERROR, new SNodePointer("r:a8be947e-2401-458d-a5e8-7789d9a23eaf(jetbrains.mps.kotlin.javaRefs.constraints)", "8257079261608484900"), "", myProject.getRepository(), myProject.getPlatform()), new CheckExpectedMessageRunnable.CheckAnyMessageRunnable(getNodeById("3400299585400961992"), MessageStatus.ERROR, "", myProject.getRepository(), myProject.getPlatform()), new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(getNodeById("3400299585400962160"), MessageStatus.ERROR, new SNodePointer("r:a8be947e-2401-458d-a5e8-7789d9a23eaf(jetbrains.mps.kotlin.javaRefs.constraints)", "5016903245542434648"), "", myProject.getRepository(), myProject.getPlatform()), new CheckExpectedMessageRunnable.CheckAnyMessageRunnable(getNodeById("3400299585400977152"), MessageStatus.ERROR, "", myProject.getRepository(), myProject.getPlatform()), new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(getNodeById("3400299585400977355"), MessageStatus.ERROR, new SNodePointer("r:a8be947e-2401-458d-a5e8-7789d9a23eaf(jetbrains.mps.kotlin.javaRefs.constraints)", "8257079261608484900"), "", myProject.getRepository(), myProject.getPlatform()))).run();
      });
    }
    public void test_ErrorMessagesCheck1945927285049372096() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("8345096074696013902");
        new CheckErrorMessagesRunnable(nodeToCheck, false, false, myProject.getPlatform()).includeSelf(true).exclude(Arrays.<CheckExpectedMessageRunnable>asList()).run();
      });
    }

  }
}
