package jetbrains.mps.kotlin.test.scopes;

/*Generated by MPS */

import jetbrains.mps.MPSLaunch;
import jetbrains.mps.lang.test.runtime.BaseTransformationTest;
import org.junit.jupiter.api.extension.RegisterExtension;
import jetbrains.mps.lang.test.runtime.TestParametersCacheExtension;
import jetbrains.mps.lang.test.runtime.TestParametersCache;
import org.junit.jupiter.api.Test;
import jetbrains.mps.lang.test.runtime.BaseTestBody;
import jetbrains.mps.lang.test.runtime.TransformationTest;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.test.runtime.CheckExpectedMessageRunnable;
import jetbrains.mps.errors.MessageStatus;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.lang.test.runtime.CheckErrorMessagesRunnable;
import java.util.Arrays;

@MPSLaunch
public class StaticInstanceScope_Test extends BaseTransformationTest {
  @RegisterExtension
  private static final TestParametersCacheExtension ourParametersCacheExtension = new TestParametersCacheExtension(new TestParametersCache(StaticInstanceScope_Test.class, "${kotlin_home}", "r:5496351e-6e92-4051-85ca-98be7df49c2e(jetbrains.mps.kotlin.test.scopes@tests)", false));

  public StaticInstanceScope_Test() {
    super(ourParametersCacheExtension.getParametersCache());
  }

  @Test
  public void test_NodeUnknownRuleCheck2138970093539338752() throws Throwable {
    new TestBody(this).test_NodeUnknownRuleCheck2138970093539338752();
  }
  @Test
  public void test_NodefunctionCallExpressionCheck2138970093539338754() throws Throwable {
    new TestBody(this).test_NodefunctionCallExpressionCheck2138970093539338754();
  }
  @Test
  public void test_NodeUnknownRuleCheck2138970093539352123() throws Throwable {
    new TestBody(this).test_NodeUnknownRuleCheck2138970093539352123();
  }
  @Test
  public void test_NodevariableReferenceCheck2138970093539352125() throws Throwable {
    new TestBody(this).test_NodevariableReferenceCheck2138970093539352125();
  }
  @Test
  public void test_NodeUnknownRuleCheck2138970093539377677() throws Throwable {
    new TestBody(this).test_NodeUnknownRuleCheck2138970093539377677();
  }
  @Test
  public void test_NodevariableReferenceCheck2138970093539386676() throws Throwable {
    new TestBody(this).test_NodevariableReferenceCheck2138970093539386676();
  }
  @Test
  public void test_NodeUnknownRuleCheck2138970093539386678() throws Throwable {
    new TestBody(this).test_NodeUnknownRuleCheck2138970093539386678();
  }
  @Test
  public void test_NodefunctionCallExpressionCheck2138970093539397389() throws Throwable {
    new TestBody(this).test_NodefunctionCallExpressionCheck2138970093539397389();
  }
  @Test
  public void test_NodeUnknownRuleCheck2138970093539397391() throws Throwable {
    new TestBody(this).test_NodeUnknownRuleCheck2138970093539397391();
  }
  @Test
  public void test_NodeUnknownRuleCheck2138970093539406395() throws Throwable {
    new TestBody(this).test_NodeUnknownRuleCheck2138970093539406395();
  }
  @Test
  public void test_NodeUnknownRuleCheck2138970093539416874() throws Throwable {
    new TestBody(this).test_NodeUnknownRuleCheck2138970093539416874();
  }
  @Test
  public void test_NodeUnknownRuleCheck2138970093539427331() throws Throwable {
    new TestBody(this).test_NodeUnknownRuleCheck2138970093539427331();
  }
  @Test
  public void test_NodeUnknownRuleCheck2138970093539437810() throws Throwable {
    new TestBody(this).test_NodeUnknownRuleCheck2138970093539437810();
  }
  @Test
  public void test_NodeUnknownRuleCheck2138970093539448254() throws Throwable {
    new TestBody(this).test_NodeUnknownRuleCheck2138970093539448254();
  }
  @Test
  public void test_NodeUnknownRuleCheck2138970093539457236() throws Throwable {
    new TestBody(this).test_NodeUnknownRuleCheck2138970093539457236();
  }
  @Test
  public void test_NodeUnknownRuleCheck2138970093539467682() throws Throwable {
    new TestBody(this).test_NodeUnknownRuleCheck2138970093539467682();
  }
  @Test
  public void test_NodeUnknownRuleCheck2138970093539479836() throws Throwable {
    new TestBody(this).test_NodeUnknownRuleCheck2138970093539479836();
  }
  @Test
  public void test_ErrorMessagesCheck2138970093539483797() throws Throwable {
    new TestBody(this).test_ErrorMessagesCheck2138970093539483797();
  }

  /*package*/ static class TestBody extends BaseTestBody {

    /*package*/ TestBody(TransformationTest owner) {
      super(owner);
    }

    @Override
    protected void initTestNodes() {
      prepareTestNodes("2138970093539325098");
    }

    public void test_NodeUnknownRuleCheck2138970093539338752() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("5433967336503824772");
        new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:133e8cac-c6ad-447f-a90c-5146ca3b1aed(jetbrains.mps.kotlin.constraints)", "4662566628538085344"), "", myProject.getRepository(), myProject.getPlatform()).run();
      });
    }
    public void test_NodefunctionCallExpressionCheck2138970093539338754() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("5433967336503824772");
        new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:1007e072-ac19-4b13-85dc-0e4118398cf2(jetbrains.mps.kotlinExt.types)", "6832737637655996497"), "", myProject.getRepository(), myProject.getPlatform()).run();
      });
    }
    public void test_NodeUnknownRuleCheck2138970093539352123() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("5433967336503824776");
        new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:133e8cac-c6ad-447f-a90c-5146ca3b1aed(jetbrains.mps.kotlin.constraints)", "6737238604821165126"), "", myProject.getRepository(), myProject.getPlatform()).run();
      });
    }
    public void test_NodevariableReferenceCheck2138970093539352125() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("5433967336503824776");
        new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:1007e072-ac19-4b13-85dc-0e4118398cf2(jetbrains.mps.kotlinExt.types)", "7221070484968127157"), "", myProject.getRepository(), myProject.getPlatform()).run();
      });
    }
    public void test_NodeUnknownRuleCheck2138970093539377677() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("5433967336503834639");
        new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:133e8cac-c6ad-447f-a90c-5146ca3b1aed(jetbrains.mps.kotlin.constraints)", "4662566628538085344"), "", myProject.getRepository(), myProject.getPlatform()).run();
      });
    }
    public void test_NodevariableReferenceCheck2138970093539386676() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("5433967336509347565");
        new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:1007e072-ac19-4b13-85dc-0e4118398cf2(jetbrains.mps.kotlinExt.types)", "7221070484968127157"), "", myProject.getRepository(), myProject.getPlatform()).run();
      });
    }
    public void test_NodeUnknownRuleCheck2138970093539386678() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("5433967336509347565");
        new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:133e8cac-c6ad-447f-a90c-5146ca3b1aed(jetbrains.mps.kotlin.constraints)", "6737238604821165126"), "", myProject.getRepository(), myProject.getPlatform()).run();
      });
    }
    public void test_NodefunctionCallExpressionCheck2138970093539397389() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("5433967336509347569");
        new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:1007e072-ac19-4b13-85dc-0e4118398cf2(jetbrains.mps.kotlinExt.types)", "6832737637655996497"), "", myProject.getRepository(), myProject.getPlatform()).run();
      });
    }
    public void test_NodeUnknownRuleCheck2138970093539397391() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("5433967336509347569");
        new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:133e8cac-c6ad-447f-a90c-5146ca3b1aed(jetbrains.mps.kotlin.constraints)", "4662566628538085344"), "", myProject.getRepository(), myProject.getPlatform()).run();
      });
    }
    public void test_NodeUnknownRuleCheck2138970093539406395() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("5433967336503819104");
        new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:133e8cac-c6ad-447f-a90c-5146ca3b1aed(jetbrains.mps.kotlin.constraints)", "4662566628538085344"), "", myProject.getRepository(), myProject.getPlatform()).run();
      });
    }
    public void test_NodeUnknownRuleCheck2138970093539416874() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("5433967336503819101");
        new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:133e8cac-c6ad-447f-a90c-5146ca3b1aed(jetbrains.mps.kotlin.constraints)", "6737238604821165126"), "", myProject.getRepository(), myProject.getPlatform()).run();
      });
    }
    public void test_NodeUnknownRuleCheck2138970093539427331() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("5433967336503846367");
        new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:133e8cac-c6ad-447f-a90c-5146ca3b1aed(jetbrains.mps.kotlin.constraints)", "4662566628538085344"), "", myProject.getRepository(), myProject.getPlatform()).run();
      });
    }
    public void test_NodeUnknownRuleCheck2138970093539437810() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("5433967336507316523");
        new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:133e8cac-c6ad-447f-a90c-5146ca3b1aed(jetbrains.mps.kotlin.constraints)", "201447423893325152"), "", myProject.getRepository(), myProject.getPlatform()).run();
      });
    }
    public void test_NodeUnknownRuleCheck2138970093539448254() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("5433967336507327891");
        new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:133e8cac-c6ad-447f-a90c-5146ca3b1aed(jetbrains.mps.kotlin.constraints)", "219803515061388727"), "", myProject.getRepository(), myProject.getPlatform()).run();
      });
    }
    public void test_NodeUnknownRuleCheck2138970093539457236() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("5433967336507346585");
        new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:133e8cac-c6ad-447f-a90c-5146ca3b1aed(jetbrains.mps.kotlin.constraints)", "201447423893325152"), "", myProject.getRepository(), myProject.getPlatform()).run();
      });
    }
    public void test_NodeUnknownRuleCheck2138970093539467682() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("5433967336509405038");
        new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:133e8cac-c6ad-447f-a90c-5146ca3b1aed(jetbrains.mps.kotlin.constraints)", "219803515061388727"), "", myProject.getRepository(), myProject.getPlatform()).run();
      });
    }
    public void test_NodeUnknownRuleCheck2138970093539479836() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("5433967336509405042");
        new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:133e8cac-c6ad-447f-a90c-5146ca3b1aed(jetbrains.mps.kotlin.constraints)", "201447423893325152"), "", myProject.getRepository(), myProject.getPlatform()).run();
      });
    }
    public void test_ErrorMessagesCheck2138970093539483797() throws Exception {
      initTestNodes();
      runWithinCommand(() -> {
        SNode nodeToCheck = getNodeById("9216070643321104553");
        new CheckErrorMessagesRunnable(nodeToCheck, false, false, myProject.getPlatform()).includeSelf(true).exclude(Arrays.<CheckExpectedMessageRunnable>asList(new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(getNodeById("5433967336503824772"), MessageStatus.ERROR, new SNodePointer("r:133e8cac-c6ad-447f-a90c-5146ca3b1aed(jetbrains.mps.kotlin.constraints)", "4662566628538085344"), "", myProject.getRepository(), myProject.getPlatform()), new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(getNodeById("5433967336503824772"), MessageStatus.ERROR, new SNodePointer("r:1007e072-ac19-4b13-85dc-0e4118398cf2(jetbrains.mps.kotlinExt.types)", "6832737637655996497"), "", myProject.getRepository(), myProject.getPlatform()), new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(getNodeById("5433967336503824776"), MessageStatus.ERROR, new SNodePointer("r:133e8cac-c6ad-447f-a90c-5146ca3b1aed(jetbrains.mps.kotlin.constraints)", "6737238604821165126"), "", myProject.getRepository(), myProject.getPlatform()), new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(getNodeById("5433967336503824776"), MessageStatus.ERROR, new SNodePointer("r:1007e072-ac19-4b13-85dc-0e4118398cf2(jetbrains.mps.kotlinExt.types)", "7221070484968127157"), "", myProject.getRepository(), myProject.getPlatform()), new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(getNodeById("5433967336503834639"), MessageStatus.ERROR, new SNodePointer("r:133e8cac-c6ad-447f-a90c-5146ca3b1aed(jetbrains.mps.kotlin.constraints)", "4662566628538085344"), "", myProject.getRepository(), myProject.getPlatform()), new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(getNodeById("5433967336509347565"), MessageStatus.ERROR, new SNodePointer("r:1007e072-ac19-4b13-85dc-0e4118398cf2(jetbrains.mps.kotlinExt.types)", "7221070484968127157"), "", myProject.getRepository(), myProject.getPlatform()), new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(getNodeById("5433967336509347565"), MessageStatus.ERROR, new SNodePointer("r:133e8cac-c6ad-447f-a90c-5146ca3b1aed(jetbrains.mps.kotlin.constraints)", "6737238604821165126"), "", myProject.getRepository(), myProject.getPlatform()), new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(getNodeById("5433967336509347569"), MessageStatus.ERROR, new SNodePointer("r:1007e072-ac19-4b13-85dc-0e4118398cf2(jetbrains.mps.kotlinExt.types)", "6832737637655996497"), "", myProject.getRepository(), myProject.getPlatform()), new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(getNodeById("5433967336509347569"), MessageStatus.ERROR, new SNodePointer("r:133e8cac-c6ad-447f-a90c-5146ca3b1aed(jetbrains.mps.kotlin.constraints)", "4662566628538085344"), "", myProject.getRepository(), myProject.getPlatform()), new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(getNodeById("5433967336503819104"), MessageStatus.ERROR, new SNodePointer("r:133e8cac-c6ad-447f-a90c-5146ca3b1aed(jetbrains.mps.kotlin.constraints)", "4662566628538085344"), "", myProject.getRepository(), myProject.getPlatform()), new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(getNodeById("5433967336503819101"), MessageStatus.ERROR, new SNodePointer("r:133e8cac-c6ad-447f-a90c-5146ca3b1aed(jetbrains.mps.kotlin.constraints)", "6737238604821165126"), "", myProject.getRepository(), myProject.getPlatform()), new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(getNodeById("5433967336503846367"), MessageStatus.ERROR, new SNodePointer("r:133e8cac-c6ad-447f-a90c-5146ca3b1aed(jetbrains.mps.kotlin.constraints)", "4662566628538085344"), "", myProject.getRepository(), myProject.getPlatform()), new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(getNodeById("5433967336507316523"), MessageStatus.ERROR, new SNodePointer("r:133e8cac-c6ad-447f-a90c-5146ca3b1aed(jetbrains.mps.kotlin.constraints)", "201447423893325152"), "", myProject.getRepository(), myProject.getPlatform()), new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(getNodeById("5433967336507327891"), MessageStatus.ERROR, new SNodePointer("r:133e8cac-c6ad-447f-a90c-5146ca3b1aed(jetbrains.mps.kotlin.constraints)", "219803515061388727"), "", myProject.getRepository(), myProject.getPlatform()), new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(getNodeById("5433967336507346585"), MessageStatus.ERROR, new SNodePointer("r:133e8cac-c6ad-447f-a90c-5146ca3b1aed(jetbrains.mps.kotlin.constraints)", "201447423893325152"), "", myProject.getRepository(), myProject.getPlatform()), new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(getNodeById("5433967336509405038"), MessageStatus.ERROR, new SNodePointer("r:133e8cac-c6ad-447f-a90c-5146ca3b1aed(jetbrains.mps.kotlin.constraints)", "219803515061388727"), "", myProject.getRepository(), myProject.getPlatform()), new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(getNodeById("5433967336509405042"), MessageStatus.ERROR, new SNodePointer("r:133e8cac-c6ad-447f-a90c-5146ca3b1aed(jetbrains.mps.kotlin.constraints)", "201447423893325152"), "", myProject.getRepository(), myProject.getPlatform()))).run();
      });
    }

  }
}
